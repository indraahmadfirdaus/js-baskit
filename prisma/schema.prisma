// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

model Customer {
  id        Int          @id @default(autoincrement())
  name      String
  email     String?      @unique
  phone     String
  orders    SalesOrder[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model SalesOrder {
  id                   Int              @id @default(autoincrement())
  notesNumber          String           @unique
  customerId           Int
  customer             Customer         @relation(fields: [customerId], references: [id])
  isPreorder           Boolean          @default(false)
  status               OrderStatus      @default(PENDING)
  totalAmount          Decimal          @default(0) @db.Decimal(10, 2)
  orderDate            DateTime         @default(now())
  expectedDeliveryDate DateTime?
  deliveryAddress      String?
  notes                String?
  items                SalesOrderItem[]
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
}

model SalesOrderItem {
  id         Int        @id @default(autoincrement())
  orderId    Int
  order      SalesOrder @relation(fields: [orderId], references: [id], onDelete: Cascade)
  goodsId    Int
  goods      Goods      @relation(fields: [goodsId], references: [id])
  quantity   Int
  unitPrice  Decimal    @db.Decimal(10, 2)
  totalPrice Decimal    @db.Decimal(10, 2)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@unique([orderId, goodsId])
}

model Goods {
  id          Int              @id @default(autoincrement())
  sku         String           @unique
  goodsName   String
  price       Decimal          @db.Decimal(10, 2)
  description String?
  inventory   Inventory?
  orderItems  SalesOrderItem[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model Inventory {
  id             Int      @id @default(autoincrement())
  goodsId        Int      @unique
  goods          Goods    @relation(fields: [goodsId], references: [id], onDelete: Cascade)
  stock          Int      @default(0)
  reservedStock  Int      @default(0)
  minStock       Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
